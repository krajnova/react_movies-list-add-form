{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/Template.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Template","name","placeholder","onChange","value","type","NewMovie","state","error","handleChange","event","target","setState","trim","formsCheck","addMovie","props","this","onSubmit","preventDefault","hidden","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c6ece8d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Template = ({ title, name, placeholder, onChange, value }) => {\n  return (\n    <label className=\"label\">\n      {title}\n      <input\n        type=\"text\"\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        className=\"input\"\n      />\n    </label>\n  );\n};\n\nTemplate.propTypes = {\n  title: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Template } from './Template';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    error: false,\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value.trim(),\n      error: false,\n    });\n  }\n\n  formsCheck = () => {\n    const { title, imgUrl, imdbUrl, imdbId, description } = this.state;\n    const { addMovie } = this.props;\n\n    if (title && imgUrl && imdbUrl && imdbId) {\n      addMovie({\n        title, description, imgUrl, imdbUrl, imdbId,\n      });\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      });\n    } else {\n      this.setState({\n        error: true,\n      });\n    }\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId, error } = this.state;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          this.formsCheck();\n        }}\n      >\n        <Template\n          title=\"Title\"\n          name=\"title\"\n          value={title}\n          placeholder=\"title of your film\"\n          onChange={this.handleChange}\n        />\n        <br />\n\n        <Template\n          title=\"Description\"\n          name=\"description\"\n          value={description}\n          placeholder=\"description of your film\"\n          onChange={this.handleChange}\n        />\n        <br />\n\n        <Template\n          title=\"ImgUrl\"\n          name=\"imgUrl\"\n          value={imgUrl}\n          placeholder=\"link of your poster\"\n          onChange={this.handleChange}\n        />\n        <br />\n\n        <Template\n          title=\"ImdbUrl\"\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          placeholder=\"link of your film on imdb\"\n          onChange={this.handleChange}\n        />\n        <br />\n\n        <Template\n          title=\"ImdbId\"\n          name=\"imdbId\"\n          value={imdbId}\n          placeholder=\"id of your film on imdb\"\n          onChange={this.handleChange}\n        />\n        <br />\n\n        <button type=\"submit\" className=\"button is-warning\">\n          Add movie\n        </button>\n\n        <p hidden={!error}>\n          Complete all fields, please\n        </p>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}